# Ruby and Rails Snippets
# Author: Dawid Fatyga (email: a permutation of { .com, @, dawid.fatyga, gmail })

[Ruby]
copy=# Ruby and Rails Snippets (mostly based on TextMate snippets)\n# Created by Dawid Fatyga
bang=#!/usr/bin/env ruby
tag=#--\n# {filename}\n# Author: {developer}\n# Created at: {date}\n#++\n

# Basic Language Snippets
# Classes/Modules
cla=class %cursor%\nend
claf=class %cursor% < ParentClass\n\tdef initialize\n\n\tend\nend
clas=class << self\n\t%cursor%\nend
mod=module %cursor%\nend
Enum=include Enumerable\n
Comp=include Comparable\n
am=alias_method %cursor%, :old_name

# Control structures
if=if %cursor%\n\nend
ife=if %cursor%\n\nelse\n\nend
nif=unless %cursor%\n\nend
nife=unless %cursor%\n\nelse\n\nend
whi=while %cursor%\nend
unt=until %cursor%\nend

# Methods
def=def %cursor%\nend
deft=def test_%cursor%\nend
defs=def self.%cursor%\nend

# Blocks
bl={ |%cursor%| }
do=do |%cursor%|\nend
be=begin\n\t%cursor%\nend
ber=begin\n\t%cursor%\nrescue Exception => e\n\nend
re=rescue %cursor% => error
y=yield %cursor%
each=each do |%cursor%|\nend
en=ensure\n\t
test=test "" do\n\nend

# Other
hash=Hash.new { |hash, key| hash[key] = %cursor% }
nodoc=#--\n# %cursor%\n#++

# RUBY ON RAILS
# Basic snippets
cll=class %cursor%Controller < ApplicationController\n\tbefore_filter :find_model\n\nprivate\n\tdef find_model\n\t\t@model = Model.find(params[:id]) if params[:id]\n\tend\nend
cllt=require File.dirname(__FILE__) + '/../test_helper'\n\nclass %cursor%ControllerTest < ActionController::TestCase\n\tdeft\nend
flash=flash[%cursor%] = "Hey You!"
resp=respond_to\s
lay=layout\s
beff=before_filter :
aftf=after_filter :

# Redirection
rep=redirect_to %cursor%_path
rea=redirect_to :action => "%cursor%"
reai=redirect_to :action => "%cursor%", :id => @item
rec=redirect_to :controller => "%cursor%"
reca=redirect_to :controller => "%cursor%", :action => "index"
recai=redirect_to :controller => "%cursor%", :action => "show", :id => @item

# Rendering
ra=render :action => "%cursor%"
ral=render :action => "%cursor%", :layout => "standard"
ri=render :inline => "%cursor%"
rn=render :nothing => true
rns=render :nothing => true, :status => %cursor%
rp=render :partial => "%cursor%"
rt=render :text => %cursor%

# RJS Snippets
ru=render :update do |page|\n\t%cursor%\nend
reph=page.replace_html :%cursor%, 'id', :what => 'content'
insh=page.insert_html :%cursor%, 'id', :what => 'content'
eff=page.visual_effect :%cursor%, 'id'
hide=page.hide '%cursor%'
show=page.show '%cursor%'
tog=page.toggle :%cursor%

# RESTful methods
rest=def index\n\nend\n\ndef new\n\nend\n\ndef create\n\nend\n\ndef show\n\nend\n\ndef edit\n\nend\n\ndef update\n\nend\n\ndef destroy\n\nend

# Models
acces=attr_accessible :

# Callback
befv=before_validation\s
befvoc=before_validation_on_create\s
befvou=before_validation_on_update\s

aftv=after_validation\s
aftvoc=after_validation_on_create\s
aftvou=after_validation_on_update\s

befs=before_save\s
afts=after_save\s

befc=before_create\s
aftc=after_create\s

befu=before_update\s
aftu=after_update\s

befd=before_destroy\s
aftd=after_destroy\s

# Asociations
bt=belongs_to\s
ho=has_one\s
hm=has_many\s
habtm=has_and_belongs_to_many\s

# Finders
fi=find(%cursor%)
fia=find(:all)
fif=find(:first)
fib=find_by_%cursor%(value)

# Validations
va=validates_associated %cursor%, :on => :create
vc=validates_confirmation_of %cursor%, :on => :create, :message => "should match confirmation!"
vac=validates_acceptance_of %cursor%, :on => :create
vp=validates_presence_of %cursor%, :on => :create, :message => "can't be blank!"
vf=validates_format_of %cursor%, :with => /^[\w\d]+$/, :on => :create, :message => "is invalid!"
vl=validates_length_of %cursor%, :within => 1..100, :on => :create, :message => "must be present!"
vn=validates_numericality_of %cursor%, :on => :create, :message => "is not a number"
ve=validates_exclusion_of %cursor%, :in => %w( mov avi ), :on => :create, :message => "extension %s is not allowed"
vi=validates_inclusion_of %cursor%, :in => %w( mov avi ), :on => :create, :message => "extension %s is not included in the list"
vu=validates_uniqueness_of %cursor%, :on => :create, :message => "must be unique"

# Routes
map=map.connect '%cursor%'
mapn=map.%cursor% 'prefix', :controller => "main", :action => "index"
mapwo=map.with_options :%cursor% => 'option' do |option|\n\nend

[HTML]
# by Tomasz Karbownicki <tomasz@karbownicki.com>
# top
strict=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
trans=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
html5=<!DOCTYPE html>\n<html>\n\t%cursor%\n</html>
html=<html>\n\t%cursor%\n</html>
html2=<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\n\t%cursor%\n</html>
head=<head>\n\t%cursor%\n</head>
js=<script type="text/javascript">\n\t%cursor%\n</script>
js2=<script type="text/javascript" src="%cursor%"></script>
css=<style type="text/css">\n\t%cursor%\n</style>
css2=<link rel="stylesheet" type="text/css" href="%cursor%" />
rss=<link rel="alternate" type="application/rss+xml" title="%cursor%" href="" />
title=<title>%cursor%</title>
utf=<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
body=<body>\n\t%cursor%\n</body>
# table
table=<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>%cursor%</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td></td>\n\t\t</tr>\n\t</tbody>\n</table>
td=<td>%cursor%</td>
tr=<tr>%cursor%</tr>
th=<th>%cursor%</th>
caption=<caption>%cursor%</caption>
# form
form=<form action="%cursor%" method="post">\n\n\t<input type="submit" value="Zapisz" />\n</form>
label=<label for="%cursor%"></label>
input=<input type="text" name="%cursor%" value="" id="" />
pass=<input type="password" name="%cursor%" id="" />
textarea=<textarea name="%cursor%" cols="50" rows="10" id="" ></textarea>
select=<select name="%cursor%" id="">\n\t<option value=""></option>\n</select>
radio=<input type="radio" name="%cursor%" value="" />
checkbox=<input type="checkbox" name="%cursor%" value="" />
submit=<input type="submit" value="%cursor%" />
# list
ul=<ul class="%cursor%">\n\t<li></li>\n</ul>
ol=<ol class="%cursor%">\n\t<li></li>\n</ol>
li=<li>%cursor%</li>
# inline
span=<span class="%cursor%"></span>
em=<em>%cursor%</em>
cite=<cite>%cursor%</cite>
strong=<strong>%cursor%</strong>
img=<img src="%cursor%" alt="" />
anch=<a name="%cursor%"></a>
thumb=<a href="%cursor%"><img src="" /></a>
# block
div=<div class="%cursor%"></div>
h1=<h1>%cursor%</h1>
h2=<h2>%cursor%</h2>
h3=<h3>%cursor%</h3>
h4=<h4>%cursor%</h4>
h5=<h5>%cursor%</h5>
h6=<h6>%cursor%</h6>
p=<p>%cursor%</p>
pre=<pre>\n%cursor%\n</pre>
code=<code>\n%cursor%\n</code>
quote=<blockquote>\n\t<p>\n\t\t%cursor%\n\t</p>\n</blockquote>
# other
cmt=<!--\n\t%cursor%\n-->
br=<br/>
hr=<hr/>
1s=&nbsp;
3s=&nbsp;&nbsp;&nbsp;
7s=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
# Django templates
if={% if %cursor% %}\n\t\n{% endif %}
for={% for sth in %cursor% %}\n\t%cursor%\n{% endfor %}
dv={{ %cursor% }}
db={% %cursor% %}
dbl={% block %cursor% %}\n\t%cursor%\n{% endblock %}
trans={% trans "%cursor%" %}
# Erb snippets
erb=<% %cursor% %>
erb2=<%= %cursor% %>
jit=javascript_include_tag :all, :cache => true
slt=stylesheet_link_tag %cursor%, :cache => true
ff=form_for @%cursor% do |form|\n\nend
ffe=error_messages_for :model\n\nform_for @%cursor% do |form|\n\nend
layout=strict trans\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\n\t<head>\n\t\t<title>%cursor%</title>\n\t\t<%= stylesheet_link_tag :all, :cache => true %>\n\t</head>\n\t<body>\n\t\t<%= yield :layout %>\n\t</body>\n\t<%= javascript_include_tag :all, :cache => true %>\n</html>
ft=<% form_tag(:action => '%cursor%', {:class => "form"}) do %>\n\n<% end -%>
frt=<% form_remote_tag(:action => '%cursor%', { :class => "form"}) do\n\n<% end -%>
st=submit_tag '%cursor%', :id => 'commit', :name => 'commit'
lir=link_to_remote '%cursor%', :url => { :action => 'index' }
lia=link_to '%cursor%', :action => "action"
lica=licai=link_to '%cursor%', :controller => "controller ", :action => "action"
licai=link_to '%cursor%', :controller => "controller", :action => "action", :id => @item
ri=render :inline => "%cursor%"
rp=render :partial => "%cursor%"
rt=render :text => %cursor%
# jQuery
jquery=<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
jqueryui=<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
jready=$(document).ready(function(){\n\t%cursor%\n});
jfunc=$(function(){\n\t%cursor%\n});
log=console.log('%cursor%');


[Default]
if=if (%cursor%)%brace_open%\n%brace_close%
else=else%brace_open%%cursor%\n%brace_close%
for=for (i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%brace_open%\n%brace_close%
do=do%brace_open%%cursor%\n%brace_close% while ()
switch=switch (%cursor%)%brace_open%case : break;\n%ws%default: \n%brace_close%
try=try%block_cursor%catch ()%block%

[Special]
brace_open=\n{\n\t
brace_close=}\n
block=\n{\n\t\n}\n
block_cursor=\n{\n\t%cursor%\n}\n
wordchars=._abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

[C++]
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%

[Java]
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%

[Javascript]
jready=$(document).ready(function(){\n\t%cursor%\n});
log=console.log('%cursor%');

[PHP]
# Little php snippets written by Atanas Beloborodov <nasko@cod3r.org>
# Some php5 object`s usefull snippets
class=class %cursor% \n{\n\tpublic function __construct()\n\t{\t\n\n\t}\n\n\tpublic function __destruct()\n\t{\t\n\n\t}\n}
interface=interface %cursor% %block%
static=public static function %cursor%() %block%
public=public function %cursor%()%block%
protected=protected function %cursor%()%block%
private=private function %cursor%()%block%
#Control structures :
for=for ($i = 0; $i < %cursor%; $i++ %block%
while=while (%cursor%) %block%
if=if (%cursor%) %block%
switch=switch (%cursor%) {\n\tcase '';\n\n\tbreak;\n\n\tdefault :\n\n\tbreak;\n}\n
else=if (%cursor%) %block%else %block%
elseif=if (%cursor%) {\n\t\n}\nelseif () {\n\t\n}\nelse {\n\t\n}\n
do=do %block%while (%cursor%);
foreach=foreach (%cursor%) %block%
# Include methods
# Note : require and include is not functions ! Not required braces () 
req=require "%cursor%";
reqo=require_once "%cursor%";
inc=include "%cursor%";
inco=include_once "%cursor%";
# Others :
function=function %cursor%() %block%
def=define ('%cursor%','');
throw=throw new Exception ('%cursor%');e%

[Python]
for=for i in xrange(%cursor%):\n\t
doc=""" %cursor% """\n
elif=elif %cursor%:\n\t
else=else:\n\t%cursor%
if=if %cursor%:\n\t
from=from %cursor% import %cursor%\n
main=if __name__ == '__main__':\n\t%cursor%
class=class %cursor%(object):\n\t""" %cursor% """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
def=def %cursor%(self):\n\t""" Function doc\n\n\t@param PARAM: DESCRIPTION\n\t@return RETURN: DESCRIPTION\n\t"""\n\t
get=def get%cursor%(self): return self._var\n
set=def set%cursor%(self): self._var = var\n
.=self.%cursor%
try=try:\n\t%cursor%\nexcept Exception, e:\n\t
py=#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n%cursor%
while=while %cursor%:\n\t
with=with %cursor%:\n\t
head="""\n\t%cursor%PROJECT - MODULE\n\n\tDESCRIPTION\n\n\t@copyright: {year} by {developer} <{mail}>\n\t@license: GNU GPL, see COPYING for details.\n"""\n
p=print "%cursor%"
pr=print %cursor%
# Django models
# by Tomasz Karbownicki <tomasz@karbownicki.com>
mclass=class %cursor%(models.Model):\n\t'''%cursor%'''\n\n\tdef __unicode__(self):\n\t\treturn self.XXXXX\n\n\tdef get_absolute_url(self):\n\t\treturn "/XXXXX/%s/" % self.slug\n\n\tclass Meta:\n\t\tverbose_name = "%cursor%"\n\t\tverbose_name_plural = "%cursor%"
mchar=%cursor% = models.CharField(max_length=50, verbose_name=u'%cursor%')
mint=%cursor% = models.IntegerField(verbose_name=u'%cursor%')
mtext=%cursor% = models.TextField(verbose_name=u'%cursor%')
mkey=%cursor% = models.ForeignKey(%cursor%, verbose_name=u'%cursor%')
mimage=%cursor% = models.ImageField(upload_to='', verbose_name=u'%cursor%')
mbool=%cursor% = models.BooleanField(verbose_name=u'%cursor%')
mdate=%cursor% = models.DateField(verbose_name=u'%cursor%', help_text='Format daty: 2009-04-28')
memail=%cursor% = models.EmailField(verbose_name=u'%cursor%')
murl=%cursor% = models.URLField(verbose_name=u'%cursor%')
mslug=%cursor% = models.SlugField(verbose_name=u'%cursor%', unique=True)

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[CSS]
# by Tomasz Karbownicki <tomasz@karbownicki.com>
bc=background-color: %cursor%;
bp=background-position: %cursor%;
bct=background-color: transparent;
ba=background: url(%cursor%) %cursor%;
ma=margin: %cursor%;
pa=padding: %cursor%;
bo=border: %cursor%;
co=color: %cursor%;
cu=cursor: %cursor%;
he=height: %cursor%;
wi=width: %cursor%;
di=display: %cursor%;
fs=font-size: %cursor%;
ff=font-family: %cursor%;
fw=font-weight: %cursor%;
ta=text-align: %cursor%;
ts=text-shadow: %cursor%;
td=text-decoration: %cursor%;
fl=float: %cursor%;
lh=line-height: %cursor%;
im=!important
po=position: %cursor%;
ov=overflow: %cursor%;
op=opacity: 0.5;
ra=-moz-border-radius: %cursor%px; -webkit-border-radius: %cursor%px; border-radius: %cursor%px;
sh=border-shadow: %cursor%px %cursor%px #%cursor% %cursor%px;
cmt=/* ######### %cursor% ######### */
hide=text-indent: 9999em; line-height: 9999em; overflow: hidden;

[LaTeX]
# by Frank Lanitz
frame=\\begin{frame}\n%ws%\\frametitle{%cursor%}\n%ws%%cursor%\n\\end{frame}
block=\\begin{block}{%cursor%}\n%ws%%cursor%\n\\end{block}
itemize=\\begin{itemize}\n%ws%\\item %cursor%\n\\end{itemize}
enumerate=\\begin{enumerate}\n%ws%\\item %cursor%\n\\end{enumerate}
description=\\begin{description}\n%ws%\\item %cursor%\n\\end{description}

[Tcl]
# by Witek Mozga
proc=proc %cursor% {  } {\n\t\n} ; # end proc
namespace=namespace eval %cursor% {\n\t\n}; # end namespace
expr=expr { %cursor% }
oo=oo::class create %cursor%  {\n\t\n}; # end class
for=for {set i 0} {$i < %cursor%} {incr i} {\n\t\n} ; # end for
while=while { $%cursor% } {\n\t\n} ; # end while
foreach=foreach x $%cursor% {\n\t\n} ; # end foreach
if=if { $%cursor% } {\n\t\n} ; # end if
else=else {\n\t\n} ; # end else
elseif=elseif { $%cursor% } {\n\t\n} ; # end elseif
switch=switch %cursor% {\n\t\n\tdefault {  }\n} ; # end switch
set=set %cursor% {  }


